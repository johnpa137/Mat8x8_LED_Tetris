
module adder #(parameter BITSIZE=1) (sum, overflow, a, b, cin);
	output logic [BITSIZE-1:0] sum;
	output logic overflow;
	input logic [BITSIZE-1:0] a, b;
	input logic cin;
	logic [BITSIZE:0] carries;
	
	genvar i;
	generate
		for(i=0; i<BITSIZE; i++) begin : subAdders
			fullAdder fa(.sum(sum[i]), .cout(carries[i+1]),
				.cin(carries[i]), .a(a[i]), .b(b[i]));
		end
	endgenerate
	
	assign carries[0] = cin;
	assign overflow = carries[BITSIZE] ^ carries[BITSIZE-1];
endmodule 